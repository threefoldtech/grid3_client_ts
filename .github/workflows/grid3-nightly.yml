# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: grid3-nightly

on:  
  push:
    branches: [ development_nightly ]
  schedule:
    - cron: "0 6 * * *"

jobs:
  deployment-scripts:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        node-version: [14.x]
        experimental: [true]
        include:
          - os: ubuntu-20.04
            node-version: 14
            experimental: true
            name: Experimental build - latest Ubuntu
          - os: ubuntu-20.04
            python-version: 14
            experimental: true
            name: Experimental build - latest Node
    steps:
      - uses: actions/checkout@v2
      - name: Set up node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y git libtool tmux redis net-tools
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: set env variables
        run: |
          echo "NETWORK=dev" >> $GITHUB_ENV
          echo "RMB_PROXY=true" >> $GITHUB_ENV
          echo "STORE_SECRET=secret" >> $GITHUB_ENV
          echo "MNEMONIC=${{ secrets.MNEMONIC }}" >> $GITHUB_ENV
      - name: Run test single vm
        id: single_vm
        continue-on-error: true
        run: |
          yarn run ts-node --project tsconfig-node.json scripts/single_vm.ts
      - name: Cleanup - Delete all contracts
        continue-on-error: false
        run: |
          yarn run ts-node --project tsconfig-node.json scripts/delete_all_contracts.ts
      - name: Check test script status
        if: steps.single_vm.outcome != 'success'
        run: exit "Test scripts failed, Please check 'Run test single vm' step."